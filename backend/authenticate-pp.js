require('dotenv').config({ path: '../.env' });

console.log('üîê AUTHENTICATING WITH PRACTICEPANTHER\n');

async function authenticateWithPP() {
  try {
    // Import the existing service instance
    const ppService = require('./services/practicePartnerService');
    
    if (!ppService) {
      console.log('‚ùå PracticePartnerService not available - check Supabase configuration');
      return;
    }
    
    console.log('üìã Configuration Check:');
    console.log('- PP_CLIENT_ID:', process.env.PP_CLIENT_ID ? '‚úÖ Present' : '‚ùå Missing');
    console.log('- PP_CLIENT_SECRET:', process.env.PP_CLIENT_SECRET ? '‚úÖ Present' : '‚ùå Missing');
    console.log('- PP_AUTH_CODE:', process.env.PP_AUTH_CODE ? '‚úÖ Present' : '‚ùå Missing');
    console.log('- SUPABASE_URL:', process.env.SUPABASE_URL ? '‚úÖ Present' : '‚ùå Missing');
    console.log('- SUPABASE_SERVICE_KEY:', process.env.SUPABASE_SERVICE_KEY ? '‚úÖ Present' : '‚ùå Missing');

    if (!process.env.PP_CLIENT_ID || !process.env.PP_CLIENT_SECRET || !process.env.PP_AUTH_CODE) {
      console.log('\n‚ùå Missing required credentials');
      return;
    }
    
    console.log('\nüîÑ Exchanging auth code for access token...');
    
    // Exchange the auth code for a token
    const tokenData = await ppService.exchangeCodeForToken(process.env.PP_AUTH_CODE);
    
    if (!tokenData) {
      console.log('‚ùå Failed to exchange auth code for token');
      return;
    }

    console.log('‚úÖ Token exchange successful!');
    console.log('- Access token received');
    console.log('- Expires in:', tokenData.expires_in, 'seconds');
    
    console.log('\nüíæ Storing token in database...');
    
    // Store the token using the service
    const stored = await ppService.storeToken(tokenData);
    
    if (!stored) {
      console.log('‚ùå Failed to store token');
      return;
    }

    console.log('‚úÖ Token stored successfully!');
    
    console.log('\nüß™ Testing connection...');
    
    // Test the connection
    const testResult = await ppService.testConnection();
    
    if (testResult) {
      console.log('‚úÖ Connection test successful!');
      console.log('\nüéâ PracticePanther authentication complete!');
      console.log('You can now run data sync operations.');
    } else {
      console.log('‚ùå Connection test failed');
    }

  } catch (error) {
    console.log('‚ùå Authentication failed:', error.message);
    console.log('Error details:', error);
  }
}

authenticateWithPP(); 