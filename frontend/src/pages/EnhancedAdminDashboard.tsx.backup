import React, { useState, useEffect } from 'react';
import { useAuth } from '../hooks/useAuth';
import { smartApi } from '../services/smartApi';
import { apiService } from '../services/api';
import UnifiedChatInterface from '../components/UnifiedChatInterface';
import EnterpriseDocumentManager from '../components/EnterpriseDocumentManager';
import UserManagement from '../components/UserManagement';
import TemplateManager from '../components/TemplateManager';
import { ExchangeList } from '../components/ExchangeList';
import {
  ChartBarIcon,
  UsersIcon,
  DocumentTextIcon,
  CheckCircleIcon,
  CogIcon,
  ArrowPathIcon,
  ExclamationTriangleIcon,
  StarIcon,
  ClockIcon,
  ShieldCheckIcon,
  ServerIcon,
  EyeIcon,
  PlusIcon,
  CpuChipIcon,
  CircleStackIcon,
  CloudIcon,
  ArrowDownTrayIcon,
  TrashIcon,
  DocumentArrowDownIcon,
  ChatBubbleLeftRightIcon,
  FolderIcon,
  XMarkIcon,
  CloudArrowUpIcon,
  DocumentPlusIcon
} from '@heroicons/react/24/outline';

interface AdminStats {
  exchanges: {
    total: number;
    pending: number;
    active: number;
    completed: number;
    ppSynced: number;
  };
  tasks: {
    total: number;
    pending: number;
    overdue: number;
    completed: number;
  };
  users: {
    total: number;
    active: number;
    admins: number;
    clients: number;
    coordinators: number;
  };
  system: {
    lastSync: string | null;
    syncStatus: 'success' | 'error' | 'pending';
    totalDocuments: number;
    systemHealth: 'healthy' | 'warning' | 'error';
  };
}

const EnhancedAdminDashboard: React.FC = () => {
  const { user } = useAuth();
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [stats, setStats] = useState<AdminStats>({
    exchanges: { total: 0, pending: 0, active: 0, completed: 0, ppSynced: 0 },
    tasks: { total: 0, pending: 0, overdue: 0, completed: 0 },
    users: { total: 0, active: 0, admins: 0, clients: 0, coordinators: 0 },
    system: { lastSync: null, syncStatus: 'pending', totalDocuments: 0, systemHealth: 'healthy' }
  });

  const [activeTab, setActiveTab] = useState<'overview' | 'exchanges' | 'tasks' | 'users' | 'agencies' | 'deepdive' | 'chat' | 'documents' | 'templates' | 'system'>('overview');
  const [activeSystemSubTab, setActiveSystemSubTab] = useState<'overview' | 'templates' | 'settings' | 'sync' | 'audit'>('overview');
  const [systemDropdownOpen, setSystemDropdownOpen] = useState(false);
  const [syncing, setSyncing] = useState(false);
  const [documentManagerOpen, setDocumentManagerOpen] = useState(false);
  const [selectedUser, setSelectedUser] = useState<any>(null);
  const [userViewMode, setUserViewMode] = useState<'card' | 'table'>('card');
  const [userSidebarOpen, setUserSidebarOpen] = useState(false);
  const [documentCategories] = useState([
    'Exchange Agreement',
    '1031 Forms',
    'Property Documents',
    'Tax Documents',
    'Legal Documents',
    'Compliance Forms',
    'Client Communications',
    'Other'
  ]);

  useEffect(() => {
    loadAdminStats();
  }, []);

  const loadAdminStats = async () => {
    setLoading(true);
    try {
      const [exchangesRes, tasksRes, usersRes] = await Promise.all([
        smartApi.getExchanges(),
        smartApi.getTasks(),
        apiService.get('/admin/users').catch(() => ({ data: [] }))
      ]);
      
      const exchanges = exchangesRes.exchanges || exchangesRes || [];
      const tasks = tasksRes.tasks || tasksRes || [];
      const users = usersRes.data || [];
      
      const now = new Date();
      
      setStats({
        exchanges: {
          total: exchanges.length,
          pending: exchanges.filter((ex: any) => ex.status === 'PENDING').length,
          active: exchanges.filter((ex: any) => ['45D', '180D'].includes(ex.status)).length,
          completed: exchanges.filter((ex: any) => ex.status === 'COMPLETED').length,
          ppSynced: exchanges.filter((ex: any) => ex.ppMatterId).length
        },
        tasks: {
          total: tasks.length,
          pending: tasks.filter((t: any) => t.status === 'PENDING').length,
          overdue: tasks.filter((t: any) => {
            if (!t.dueDate || t.status === 'COMPLETED') return false;
            return new Date(t.dueDate) < now;
          }).length,
          completed: tasks.filter((t: any) => t.status === 'COMPLETED').length
        },
        users: {
          total: users.length,
          active: users.filter((u: any) => u.isActive).length,
          admins: users.filter((u: any) => u.role === 'admin').length,
          clients: users.filter((u: any) => u.role === 'client').length,
          coordinators: users.filter((u: any) => u.role === 'coordinator').length
        },
        system: {
          lastSync: exchangesRes.lastSyncTime || null,
          syncStatus: 'success',
          totalDocuments: 0, // Would need documents endpoint
          systemHealth: 'healthy'
        }
      });
    } catch (err) {
      console.error('Failed to load admin stats:', err);
      setError('Failed to load system statistics');
    } finally {
      setLoading(false);
    }
  };

  const handleSyncPP = async () => {
    setSyncing(true);
    try {
      await apiService.post('/sync/all');
      await loadAdminStats();
    } catch (err) {
      console.error('Sync failed:', err);
      setError('Failed to sync PracticePanther data');
    } finally {
      setSyncing(false);
    }
  };


  const StatCard: React.FC<{
    title: string;
    value: number;
    subtitle?: string;
    icon: React.ElementType;
    color: string;
    trend?: string;
  }> = ({ title, value, subtitle, icon: Icon, color, trend }) => (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <div className="flex items-center justify-between">
        <div>
          <p className="text-sm font-medium text-gray-600">{title}</p>
          <p className={`text-3xl font-bold text-${color}-600`}>{value}</p>
          {subtitle && <p className="text-xs text-gray-500 mt-1">{subtitle}</p>}
          {trend && <p className="text-xs text-green-600 mt-1">{trend}</p>}
        </div>
        <Icon className={`w-12 h-12 text-${color}-200`} />
      </div>
    </div>
  );

  const QuickAction: React.FC<{
    title: string;
    description: string;
    icon: React.ElementType;
    onClick: () => void;
    color: string;
  }> = ({ title, description, icon: Icon, onClick, color }) => (
    <button
      onClick={onClick}
      className={`bg-white rounded-lg shadow-sm border border-gray-200 p-4 text-left hover:shadow-md transition-shadow hover:border-${color}-200`}
    >
      <div className="flex items-center space-x-3">
        <Icon className={`w-8 h-8 text-${color}-600`} />
        <div>
          <h3 className="text-sm font-medium text-gray-900">{title}</h3>
          <p className="text-xs text-gray-500">{description}</p>
        </div>
      </div>
    </button>
  );

  if (loading) {
    return (
      <div className="flex items-center justify-center h-screen bg-gray-100">
        <div className="text-center">
          <ArrowPathIcon className="w-8 h-8 animate-spin text-blue-600 mx-auto mb-3" />
          <p className="text-gray-600">Loading admin dashboard...</p>
        </div>
      </div>
    );
  }

  const headerContent = (
    <div className="flex items-center justify-between w-full">
      <div className="flex items-center space-x-6">
        <div className="flex items-center space-x-2">
          <DocumentTextIcon className="w-5 h-5 text-gray-400" />
          <span className="text-sm text-gray-600">
            <span className="font-semibold text-gray-900">{stats.exchanges.total}</span> exchanges
          </span>
        </div>
        <div className="h-4 w-px bg-gray-300" />
        <div className="flex items-center space-x-2">
          <UsersIcon className="w-5 h-5 text-gray-400" />
          <span className="text-sm text-gray-600">
            <span className="font-semibold text-blue-600">{stats.users.active}</span> active users
          </span>
        </div>
        <div className="h-4 w-px bg-gray-300" />
        <div className="flex items-center space-x-2">
          <CheckCircleIcon className="w-5 h-5 text-gray-400" />
          <span className="text-sm text-gray-600">
            <span className="font-semibold text-orange-600">{stats.tasks.overdue}</span> overdue tasks
          </span>
        </div>
      </div>
      <div className="flex items-center space-x-3">
        <button
          onClick={handleSyncPP}
          className="flex items-center space-x-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm"
        >
          <ArrowPathIcon className="w-4 h-4" />
          <span>Sync PP</span>
        </button>
      </div>
    </div>
  );

  return (
    <div className="flex h-screen bg-gray-50">
      {/* Left Sidebar Navigation */}
      <div className="w-80 bg-white shadow-lg">
        {/* Admin Header with Blue Theme */}
        <div className="bg-gradient-to-r from-blue-600 to-sky-600 p-6 text-white">
          <div className="flex items-center space-x-3">
            <div className="w-12 h-12 bg-white/20 rounded-lg flex items-center justify-center">
              <ServerIcon className="w-6 h-6 text-white" />
            </div>
            <div>
              <h1 className="text-xl font-bold">Admin Dashboard</h1>
              <p className="text-sm text-blue-100">{user?.company || 'System Administration'}</p>
            </div>
          </div>
        </div>

        {/* Quick Stats */}
        <div className="px-6 space-y-4">
          <div className="bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-2xl font-bold">{stats.exchanges.total}</p>
                <p className="text-sm opacity-90">Total Exchanges</p>
              </div>
              <DocumentTextIcon className="w-8 h-8 opacity-80" />
            </div>
          </div>

          <div className="bg-gradient-to-r from-green-500 to-green-600 rounded-lg p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-2xl font-bold">{stats.users.active}</p>
                <p className="text-sm opacity-90">Active Users</p>
              </div>
              <UsersIcon className="w-8 h-8 opacity-80" />
            </div>
          </div>

          <div className="bg-gradient-to-r from-orange-500 to-orange-600 rounded-lg p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-2xl font-bold">{stats.tasks.overdue}</p>
                <p className="text-sm opacity-90">Overdue Tasks</p>
              </div>
              <ExclamationTriangleIcon className="w-8 h-8 opacity-80" />
            </div>
          </div>
        </div>

        {/* Navigation Menu */}
        <nav className="flex-1 px-6 space-y-2 mt-6">
          {[
            { name: 'Overview', id: 'overview', icon: ChartBarIcon },
            { name: 'Exchanges', id: 'exchanges', icon: DocumentTextIcon },
            { name: 'Tasks', id: 'tasks', icon: CheckCircleIcon },
            { name: 'Users', id: 'users', icon: UsersIcon },
            { name: 'Agencies', id: 'agencies', icon: UsersIcon },
            { name: 'Deep Dive', id: 'deepdive', icon: EyeIcon },
            { name: 'Documents', id: 'documents', icon: FolderIcon },
            { name: 'Templates', id: 'templates', icon: DocumentPlusIcon },
            { name: 'Chat', id: 'chat', icon: ChatBubbleLeftRightIcon },
            { name: 'System', id: 'system', icon: CogIcon }
          ].map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id as any)}
              className={`w-full flex items-center space-x-3 py-3 px-4 rounded-lg font-medium text-sm transition-colors ${
                activeTab === tab.id
                  ? 'bg-blue-100 text-blue-700 border-r-2 border-blue-600'
                  : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'
              }`}
            >
              <tab.icon className="w-5 h-5" />
              <span>{tab.name}</span>
            </button>
          ))}
        </nav>

        {/* System Status Indicator */}
        <div className="absolute bottom-4 left-4 right-4">
          <div className="bg-green-50 rounded-lg p-3">
            <div className="flex items-center text-xs text-green-700">
              <div className="w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse"></div>
              <span>System Operational</span>
            </div>
            <div className="text-xs text-gray-500 mt-1">Last sync: {new Date(stats.system.lastSync || Date.now()).toLocaleTimeString()}</div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="flex-1 overflow-auto">
        {/* Unified Page Header */}
        <div className="bg-white border-b border-gray-200 px-6 py-4">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold text-gray-900 flex items-center">
                {activeTab === 'overview' && <><ChartBarIcon className="w-6 h-6 mr-2" /> Dashboard Overview</>}
                {activeTab === 'exchanges' && <><DocumentTextIcon className="w-6 h-6 mr-2" /> Exchange Management</>}
                {activeTab === 'tasks' && <><CheckCircleIcon className="w-6 h-6 mr-2" /> Task Management</>}
                {activeTab === 'users' && <><UsersIcon className="w-6 h-6 mr-2" /> User Management</>}
                {activeTab === 'agencies' && <><UsersIcon className="w-6 h-6 mr-2" /> Agency Management</>}
                {activeTab === 'deepdive' && <><EyeIcon className="w-6 h-6 mr-2" /> Deep Dive Analytics</>}
                {activeTab === 'documents' && <><FolderIcon className="w-6 h-6 mr-2" /> Document Management</>}
                {activeTab === 'templates' && <><DocumentPlusIcon className="w-6 h-6 mr-2" /> Template Documents</>}
                {activeTab === 'chat' && <><ChatBubbleLeftRightIcon className="w-6 h-6 mr-2" /> Messages & Chat</>}
                {activeTab === 'system' && <><CogIcon className="w-6 h-6 mr-2" /> System Configuration</>}
              </h1>
              <p className="text-sm text-gray-600 mt-1">
                {activeTab === 'overview' && 'Monitor key metrics and system performance at a glance'}
                {activeTab === 'exchanges' && 'Manage all 1031 exchanges across the platform'}
                {activeTab === 'tasks' && 'Track and manage all tasks and assignments'}
                {activeTab === 'users' && 'Manage platform users, roles, and permissions'}
                {activeTab === 'agencies' && 'Manage super third parties and their agent networks'}
                {activeTab === 'deepdive' && 'Advanced insights, trends, and detailed analytics'}
                {activeTab === 'documents' && 'Manage all exchange documents and file uploads'}
                {activeTab === 'templates' && 'Manage template documents for 1031 exchanges'}
                {activeTab === 'chat' && 'Communicate with your exchange team in real-time'}
                {activeTab === 'system' && 'Configure system settings and monitor platform health'}
              </p>
            </div>
            {/* Tab-specific action buttons */}
            <div className="flex items-center space-x-3">
              {activeTab === 'overview' && (
                <button
                  onClick={handleSyncPP}
                  disabled={syncing}
                  className="flex items-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50"
                >
                  <ArrowPathIcon className={`w-4 h-4 ${syncing ? 'animate-spin' : ''}`} />
                  <span>{syncing ? 'Syncing...' : 'Sync PP'}</span>
                </button>
              )}
              {activeTab === 'exchanges' && (
                <button className="flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                  <PlusIcon className="w-4 h-4" />
                  <span>New Exchange</span>
                </button>
              )}
              {activeTab === 'users' && (
                <button className="flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                  <PlusIcon className="w-4 h-4" />
                  <span>Add User</span>
                </button>
              )}
              {activeTab === 'documents' && (
                <button 
                  onClick={() => setShowTemplateUpload(true)}
                  className="flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
                >
                  <CloudArrowUpIcon className="w-4 h-4" />
                  <span>Upload Template</span>
                </button>
              )}
            </div>
          </div>
        </div>

        <div className="p-6 space-y-6">
          {error && (
            <div className="bg-red-50 border-2 border-red-300 rounded-lg p-4">
              <div className="flex items-center">
                <ExclamationTriangleIcon className="w-6 h-6 text-red-600 mr-3" />
                <p className="text-red-800 font-medium">{error}</p>
              </div>
            </div>
          )}


        {/* Overview Tab */}
        {activeTab === 'overview' && (
          <div className="space-y-6">
            {/* Statistics Cards with Enhanced Design */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-6 transform hover:scale-105 transition-all">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-gradient-to-br from-blue-500 to-blue-600">
                    <DocumentTextIcon className="w-8 h-8 text-white" />
                  </div>
                  <span className="text-xs font-medium text-green-600 bg-green-100 px-2 py-1 rounded-full">+12%</span>
                </div>
                <p className="text-3xl font-bold text-gray-900">{stats.exchanges.total}</p>
                <p className="text-sm font-medium text-gray-600 mt-1">Total Exchanges</p>
                <p className="text-xs text-gray-500 mt-2">📊 {stats.exchanges.ppSynced} synced from PP</p>
              </div>

              <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-6 transform hover:scale-105 transition-all">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-gradient-to-br from-green-500 to-green-600">
                    <UsersIcon className="w-8 h-8 text-white" />
                  </div>
                  <span className="text-xs font-medium text-blue-600 bg-blue-100 px-2 py-1 rounded-full">Active</span>
                </div>
                <p className="text-3xl font-bold text-gray-900">{stats.users.active}</p>
                <p className="text-sm font-medium text-gray-600 mt-1">Platform Users</p>
                <p className="text-xs text-gray-500 mt-2">👥 {stats.users.admins} admins, {stats.users.coordinators} coordinators</p>
              </div>

              <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-6 transform hover:scale-105 transition-all">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-gradient-to-br from-orange-500 to-orange-600">
                    <CheckCircleIcon className="w-8 h-8 text-white" />
                  </div>
                  {stats.tasks.overdue > 0 && (
                    <span className="text-xs font-medium text-red-600 bg-red-100 px-2 py-1 rounded-full animate-pulse">
                      {stats.tasks.overdue} overdue!
                    </span>
                  )}
                </div>
                <p className="text-3xl font-bold text-gray-900">{stats.tasks.pending}</p>
                <p className="text-sm font-medium text-gray-600 mt-1">Pending Tasks</p>
                <p className="text-xs text-gray-500 mt-2">⏰ Requires attention</p>
              </div>

              <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-6 transform hover:scale-105 transition-all">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-gradient-to-br from-emerald-500 to-emerald-600">
                    <ServerIcon className="w-8 h-8 text-white" />
                  </div>
                  <div className="flex items-center">
                    <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse mr-1"></div>
                    <span className="text-xs font-medium text-green-600">Healthy</span>
                  </div>
                </div>
                <p className="text-3xl font-bold text-gray-900">98%</p>
                <p className="text-sm font-medium text-gray-600 mt-1">System Health</p>
                <p className="text-xs text-gray-500 mt-2">✅ All systems operational</p>
              </div>
            </div>

            {/* Quick Actions */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <h2 className="text-lg font-semibold text-gray-900 mb-4">Quick Actions</h2>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                <QuickAction
                  title="Sync PP Data"
                  description="Update from PracticePanther"
                  icon={ArrowPathIcon}
                  onClick={handleSyncPP}
                  color="green"
                />
                <QuickAction
                  title="Create User"
                  description="Add new platform user"
                  icon={PlusIcon}
                  onClick={() => setActiveTab('users')}
                  color="blue"
                />
                <QuickAction
                  title="View Audit Logs"
                  description="System activity history"
                  icon={EyeIcon}
                  onClick={() => setActiveTab('system')}
                  color="purple"
                />
                <QuickAction
                  title="System Settings"
                  description="Configure platform"
                  icon={CogIcon}
                  onClick={() => setActiveTab('system')}
                  color="gray"
                />
              </div>
            </div>

            {/* System Status */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <h2 className="text-lg font-semibold text-gray-900 mb-4">System Status</h2>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div className="flex items-center space-x-3">
                  <div className="flex-shrink-0">
                    <ShieldCheckIcon className="w-8 h-8 text-green-600" />
                  </div>
                  <div>
                    <p className="text-sm font-medium text-gray-900">Security</p>
                    <p className="text-xs text-gray-500">All systems secure</p>
                  </div>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="flex-shrink-0">
                    <StarIcon className="w-8 h-8 text-yellow-600" />
                  </div>
                  <div>
                    <p className="text-sm font-medium text-gray-900">PP Integration</p>
                    <p className="text-xs text-gray-500">
                      {stats.system.lastSync ? `Last sync: ${new Date(stats.system.lastSync).toLocaleString()}` : 'Never synced'}
                    </p>
                  </div>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="flex-shrink-0">
                    <ServerIcon className="w-8 h-8 text-blue-600" />
                  </div>
                  <div>
                    <p className="text-sm font-medium text-gray-900">Performance</p>
                    <p className="text-xs text-gray-500">Response time: 125ms</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Exchanges Tab - Using ExchangeList Component */}
        {activeTab === 'exchanges' && (
          <div className="space-y-6">
            {/* Exchange Analytics */}
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-2xl font-bold text-gray-900">{stats.exchanges.total}</p>
                    <p className="text-sm text-gray-600">Total Exchanges</p>
                  </div>
                  <DocumentTextIcon className="w-8 h-8 text-blue-200" />
                </div>
              </div>
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-2xl font-bold text-yellow-600">{stats.exchanges.active}</p>
                    <p className="text-sm text-gray-600">Active (45D/180D)</p>
                  </div>
                  <ArrowPathIcon className="w-8 h-8 text-yellow-200" />
                </div>
              </div>
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-2xl font-bold text-orange-600">{stats.exchanges.pending}</p>
                    <p className="text-sm text-gray-600">Pending Start</p>
                  </div>
                  <ClockIcon className="w-8 h-8 text-orange-200" />
                </div>
              </div>
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-2xl font-bold text-green-600">{stats.exchanges.completed}</p>
                    <p className="text-sm text-gray-600">Completed</p>
                  </div>
                  <CheckCircleIcon className="w-8 h-8 text-green-200" />
                </div>
              </div>
            </div>

            {/* ExchangeList Component with View Toggle */}
            <ExchangeList 
              title="All System Exchanges"
              showCreateButton={true}
              showFilters={true}
              showSearch={true}
              showStats={false} // We already have stats above
            />
          </div>
        )}

        {/* Tasks Tab - Full Implementation */}
        {activeTab === 'tasks' && (
          <div className="space-y-6">
            {/* Task Overview Stats */}
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-2xl font-bold text-gray-900">{stats.tasks.total}</p>
                    <p className="text-sm text-gray-600">Total Tasks</p>
                  </div>
                  <CheckCircleIcon className="w-8 h-8 text-blue-200" />
                </div>
              </div>
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-2xl font-bold text-orange-600">{stats.tasks.pending}</p>
                    <p className="text-sm text-gray-600">Pending Tasks</p>
                  </div>
                  <ClockIcon className="w-8 h-8 text-orange-200" />
                </div>
              </div>
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-2xl font-bold text-red-600">{stats.tasks.overdue}</p>
                    <p className="text-sm text-gray-600">Overdue Tasks</p>
                  </div>
                  <ExclamationTriangleIcon className="w-8 h-8 text-red-200" />
                </div>
              </div>
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-2xl font-bold text-green-600">
                      {stats.tasks.total > 0 ? Math.round((stats.tasks.completed / stats.tasks.total) * 100) : 0}%
                    </p>
                    <p className="text-sm text-gray-600">Completion Rate</p>
                  </div>
                  <ChartBarIcon className="w-8 h-8 text-green-200" />
                </div>
              </div>
            </div>

            {/* Workload Distribution */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Team Workload Distribution</h3>
              <div className="space-y-3">
                {[
                  { name: 'Sarah Johnson', tasks: 15, capacity: 85, avatar: '👩' },
                  { name: 'Mike Chen', tasks: 12, capacity: 70, avatar: '👨' },
                  { name: 'Lisa Wang', tasks: 18, capacity: 95, avatar: '👩' },
                  { name: 'David Lee', tasks: 8, capacity: 45, avatar: '👨' },
                ].map((member) => (
                  <div key={member.name} className="flex items-center space-x-4">
                    <div className="flex-shrink-0">
                      <span className="text-2xl">{member.avatar}</span>
                    </div>
                    <div className="flex-1">
                      <div className="flex items-center justify-between mb-1">
                        <span className="text-sm font-medium text-gray-900">{member.name}</span>
                        <span className="text-sm text-gray-500">{member.tasks} tasks</span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div
                          className={`h-2 rounded-full ${
                            member.capacity > 80 ? 'bg-red-500' :
                            member.capacity > 60 ? 'bg-yellow-500' :
                            'bg-green-500'
                          }`}
                          style={{ width: `${member.capacity}%` }}
                        ></div>
                      </div>
                    </div>
                    <button className="text-blue-600 hover:text-blue-800 text-sm">Reassign</button>
                  </div>
                ))}
              </div>
            </div>

            {/* Task Management Table */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200">
              <div className="p-6 border-b border-gray-200">
                <div className="flex items-center justify-between">
                  <h2 className="text-lg font-semibold text-gray-900">All System Tasks</h2>
                  <div className="flex space-x-3">
                    <input
                      type="text"
                      placeholder="🔍 Search tasks..."
                      className="px-4 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                    />
                    <select className="px-4 py-2 border border-gray-300 rounded-lg text-sm">
                      <option>All Priority</option>
                      <option>High</option>
                      <option>Medium</option>
                      <option>Low</option>
                    </select>
                    <select className="px-4 py-2 border border-gray-300 rounded-lg text-sm">
                      <option>All Status</option>
                      <option>TODO</option>
                      <option>IN_PROGRESS</option>
                      <option>COMPLETED</option>
                      <option>OVERDUE</option>
                    </select>
                  </div>
                </div>
              </div>
              
              <div className="overflow-x-auto">
                <table className="min-w-full divide-y divide-gray-200">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Task
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Exchange
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Assigned To
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Priority
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Due Date
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Status
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Actions
                      </th>
                    </tr>
                  </thead>
                  <tbody className="bg-white divide-y divide-gray-200">
                    {[
                      { task: 'Review Purchase Agreement', exchange: 'EX-2024-001', assignee: 'Sarah Johnson', priority: 'HIGH', due: '2 days', status: 'IN_PROGRESS' },
                      { task: 'Upload Title Documents', exchange: 'EX-2024-001', assignee: 'John Smith', priority: 'URGENT', due: 'Overdue 1 day', status: 'OVERDUE' },
                      { task: 'Schedule Property Inspection', exchange: 'EX-2024-002', assignee: 'Mike Chen', priority: 'MEDIUM', due: '5 days', status: 'TODO' },
                      { task: 'Complete Financial Review', exchange: 'EX-2024-003', assignee: 'Lisa Wang', priority: 'HIGH', due: '1 week', status: 'TODO' },
                    ].map((task, index) => (
                      <tr key={index} className="hover:bg-gray-50">
                        <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                          {task.task}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          {task.exchange}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          {task.assignee}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                            task.priority === 'URGENT' ? 'bg-red-100 text-red-800' :
                            task.priority === 'HIGH' ? 'bg-orange-100 text-orange-800' :
                            task.priority === 'MEDIUM' ? 'bg-yellow-100 text-yellow-800' :
                            'bg-green-100 text-green-800'
                          }`}>
                            {task.priority}
                          </span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          <span className={task.status === 'OVERDUE' ? 'text-red-600 font-medium' : ''}>
                            {task.due}
                          </span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                            task.status === 'COMPLETED' ? 'bg-green-100 text-green-800' :
                            task.status === 'IN_PROGRESS' ? 'bg-blue-100 text-blue-800' :
                            task.status === 'OVERDUE' ? 'bg-red-100 text-red-800' :
                            'bg-gray-100 text-gray-800'
                          }`}>
                            {task.status}
                          </span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                          <div className="flex space-x-2">
                            <button className="text-blue-600 hover:text-blue-900">View</button>
                            <button className="text-green-600 hover:text-green-900">Reassign</button>
                            <button className="text-orange-600 hover:text-orange-900">Escalate</button>
                          </div>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>

            {/* Auto-Assignment Rules */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-sm font-medium text-gray-900">Auto-Assignment Rules</h3>
                <button className="text-sm text-blue-600 hover:text-blue-800">+ Add Rule</button>
              </div>
              <div className="space-y-2">
                <div className="flex items-center justify-between p-2 bg-gray-50 rounded">
                  <span className="text-sm">High priority tasks → Available coordinator with lowest workload</span>
                  <label className="flex items-center">
                    <input type="checkbox" className="rounded" defaultChecked />
                    <span className="ml-2 text-sm text-gray-600">Active</span>
                  </label>
                </div>
                <div className="flex items-center justify-between p-2 bg-gray-50 rounded">
                  <span className="text-sm">Document tasks → Document specialist team</span>
                  <label className="flex items-center">
                    <input type="checkbox" className="rounded" defaultChecked />
                    <span className="ml-2 text-sm text-gray-600">Active</span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Users Tab - Full Implementation */}
        {activeTab === 'users' && (
          <div className="space-y-6">
            <UserManagement />
          </div>
        )}

        {activeTab === 'agencies' && (
          <div className="space-y-6">
            {/* Agency Overview Stats */}
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-purple-100">
                    <UsersIcon className="w-6 h-6 text-purple-600" />
                  </div>
                  <span className="text-xs font-medium text-purple-600 bg-purple-100 px-2 py-1 rounded-full">Active</span>
                </div>
                <p className="text-2xl font-bold text-gray-900">12</p>
                <p className="text-sm text-gray-600 mt-1">Total Agencies</p>
                <p className="text-xs text-gray-500 mt-2">8 active, 4 onboarding</p>
              </div>

              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-blue-100">
                    <ShieldCheckIcon className="w-6 h-6 text-blue-600" />
                  </div>
                  <span className="text-xs font-medium text-blue-600 bg-blue-100 px-2 py-1 rounded-full">Assigned</span>
                </div>
                <p className="text-2xl font-bold text-gray-900">47</p>
                <p className="text-sm text-gray-600 mt-1">Third Party Agents</p>
                <p className="text-xs text-gray-500 mt-2">Across all agencies</p>
              </div>

              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-green-100">
                    <DocumentTextIcon className="w-6 h-6 text-green-600" />
                  </div>
                  <span className="text-xs font-medium text-green-600 bg-green-100 px-2 py-1 rounded-full">This Month</span>
                </div>
                <p className="text-2xl font-bold text-gray-900">156</p>
                <p className="text-sm text-gray-600 mt-1">Total Assignments</p>
                <p className="text-xs text-gray-500 mt-2">+23 from last month</p>
              </div>

              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-yellow-100">
                    <StarIcon className="w-6 h-6 text-yellow-600" />
                  </div>
                  <div className="flex items-center">
                    <div className="w-2 h-2 bg-green-500 rounded-full mr-1"></div>
                    <span className="text-xs font-medium text-gray-600">High Performance</span>
                  </div>
                </div>
                <p className="text-2xl font-bold text-gray-900">4.7</p>
                <p className="text-sm text-gray-600 mt-1">Avg Rating</p>
                <p className="text-xs text-gray-500 mt-2">⭐ Client satisfaction</p>
              </div>
            </div>

            {/* Agency Management Table */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-lg font-semibold text-gray-900">Agency Management</h2>
                <div className="flex space-x-3">
                  <input
                    type="text"
                    placeholder="Search agencies..."
                    className="px-4 py-2 border border-gray-300 rounded-md text-sm"
                  />
                  <select className="px-4 py-2 border border-gray-300 rounded-md text-sm">
                    <option>All Status</option>
                    <option>Active</option>
                    <option>Onboarding</option>
                    <option>Suspended</option>
                  </select>
                  <button className="flex items-center px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700">
                    <PlusIcon className="w-4 h-4 mr-2" />
                    Add Agency
                  </button>
                </div>
              </div>

              <div className="overflow-x-auto">
                <table className="min-w-full divide-y divide-gray-200">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Agency</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Third Party Agents</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Active Assignments</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rating</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                  </thead>
                  <tbody className="bg-white divide-y divide-gray-200">
                    {[
                      {
                        name: 'Premier Legal Services',
                        contact: 'Michael Thompson',
                        email: 'contact@premierlegal.com',
                        agents: 8,
                        assignments: 23,
                        rating: 4.9,
                        status: 'active',
                        specialties: ['Real Estate Law', 'Tax Law']
                      },
                      {
                        name: 'Elite Title & Escrow',
                        contact: 'Sarah Martinez',
                        email: 'info@elitetitle.com',
                        agents: 12,
                        assignments: 34,
                        rating: 4.8,
                        status: 'active',
                        specialties: ['Title Services', 'Escrow']
                      },
                      {
                        name: 'Metropolitan Law Group',
                        contact: 'David Chen',
                        email: 'admin@metrolaw.com',
                        agents: 6,
                        assignments: 18,
                        rating: 4.6,
                        status: 'active',
                        specialties: ['Corporate Law', 'Real Estate']
                      },
                      {
                        name: 'Apex Financial Advisors',
                        contact: 'Jennifer Wilson',
                        email: 'contact@apexfinancial.com',
                        agents: 4,
                        assignments: 0,
                        rating: 0,
                        status: 'onboarding',
                        specialties: ['Financial Planning', 'Tax Advisory']
                      },
                      {
                        name: 'Summit Property Services',
                        contact: 'Robert Garcia',
                        email: 'info@summitprop.com',
                        agents: 7,
                        assignments: 28,
                        rating: 4.5,
                        status: 'active',
                        specialties: ['Property Management', 'Inspections']
                      }
                    ].map((agency, index) => (
                      <tr key={index} className="hover:bg-gray-50">
                        <td className="px-6 py-4 whitespace-nowrap">
                          <div>
                            <div className="text-sm font-medium text-gray-900">{agency.name}</div>
                            <div className="text-sm text-gray-500">{agency.contact}</div>
                            <div className="text-xs text-gray-400">{agency.email}</div>
                          </div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <div className="flex items-center">
                            <span className="text-2xl font-bold text-blue-600">{agency.agents}</span>
                            <span className="text-sm text-gray-500 ml-2">agents</span>
                          </div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span className="text-sm font-medium text-gray-900">{agency.assignments}</span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          {agency.rating > 0 ? (
                            <div className="flex items-center">
                              <StarIcon className="w-5 h-5 text-yellow-400 fill-current" />
                              <span className="text-sm font-medium text-gray-900 ml-1">{agency.rating}</span>
                            </div>
                          ) : (
                            <span className="text-sm text-gray-400">No ratings yet</span>
                          )}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                            agency.status === 'active' ? 'bg-green-100 text-green-800' :
                            agency.status === 'onboarding' ? 'bg-yellow-100 text-yellow-800' :
                            'bg-red-100 text-red-800'
                          }`}>
                            {agency.status === 'active' && '✓ '}
                            {agency.status === 'onboarding' && '⏳ '}
                            {agency.status.charAt(0).toUpperCase() + agency.status.slice(1)}
                          </span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                          <button className="text-blue-600 hover:text-blue-900 mr-3">View</button>
                          <button className="text-green-600 hover:text-green-900 mr-3">Agents</button>
                          <button className="text-purple-600 hover:text-purple-900">Assign</button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>

            {/* Agency Details Cards */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* Top Performing Agency */}
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-4">🏆 Top Performing Agency</h3>
                <div className="bg-gradient-to-r from-purple-50 to-blue-50 rounded-lg p-4">
                  <div className="flex items-center justify-between mb-3">
                    <h4 className="font-medium text-gray-900">Premier Legal Services</h4>
                    <div className="flex items-center">
                      <StarIcon className="w-5 h-5 text-yellow-400 fill-current" />
                      <span className="text-sm font-medium text-gray-900 ml-1">4.9</span>
                    </div>
                  </div>
                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div>
                      <p className="text-gray-600">Agents: <span className="font-medium text-gray-900">8</span></p>
                      <p className="text-gray-600">Assignments: <span className="font-medium text-gray-900">23</span></p>
                    </div>
                    <div>
                      <p className="text-gray-600">Completion Rate: <span className="font-medium text-green-600">98%</span></p>
                      <p className="text-gray-600">Avg Response: <span className="font-medium text-blue-600">&lt; 2 hours</span></p>
                    </div>
                  </div>
                  <div className="mt-3">
                    <p className="text-xs text-gray-500">Specialties: Real Estate Law, Tax Law</p>
                  </div>
                </div>
              </div>

              {/* Recent Agency Activity */}
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-4">📊 Recent Agency Activity</h3>
                <div className="space-y-3">
                  {[
                    { agency: 'Elite Title & Escrow', action: 'Completed assignment', exchange: 'EX-2024-145', time: '2 hours ago' },
                    { agency: 'Metropolitan Law Group', action: 'New agent onboarded', agent: 'Lisa Rodriguez', time: '4 hours ago' },
                    { agency: 'Premier Legal Services', action: 'Assignment accepted', exchange: 'EX-2024-146', time: '6 hours ago' },
                    { agency: 'Summit Property Services', action: 'Document reviewed', exchange: 'EX-2024-143', time: '1 day ago' }
                  ].map((activity, index) => (
                    <div key={index} className="flex items-start space-x-3 p-3 bg-gray-50 rounded-lg">
                      <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>
                      <div className="flex-1">
                        <p className="text-sm font-medium text-gray-900">{activity.agency}</p>
                        <p className="text-sm text-gray-600">
                          {activity.action}
                          {activity.exchange && <span className="font-medium"> {activity.exchange}</span>}
                          {activity.agent && <span className="font-medium"> {activity.agent}</span>}
                        </p>
                        <p className="text-xs text-gray-500 mt-1">{activity.time}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Agency Agent Management */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-lg font-semibold text-gray-900">👥 Third Party Agents by Agency</h3>
                <select className="px-4 py-2 border border-gray-300 rounded-md text-sm">
                  <option>All Agencies</option>
                  <option>Premier Legal Services</option>
                  <option>Elite Title & Escrow</option>
                  <option>Metropolitan Law Group</option>
                </select>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {[
                  { name: 'Michael Johnson', agency: 'Premier Legal Services', specialty: 'Real Estate Law', assignments: 8, rating: 4.9, status: 'active' },
                  { name: 'Sarah Davis', agency: 'Elite Title & Escrow', specialty: 'Title Services', assignments: 12, rating: 4.8, status: 'active' },
                  { name: 'Robert Wilson', agency: 'Metropolitan Law Group', specialty: 'Corporate Law', assignments: 6, rating: 4.7, status: 'active' },
                  { name: 'Emily Chen', agency: 'Premier Legal Services', specialty: 'Tax Law', assignments: 9, rating: 4.9, status: 'active' },
                  { name: 'David Martinez', agency: 'Summit Property Services', specialty: 'Property Management', assignments: 7, rating: 4.6, status: 'active' },
                  { name: 'Lisa Rodriguez', agency: 'Metropolitan Law Group', specialty: 'Real Estate', assignments: 0, rating: 0, status: 'onboarding' }
                ].map((agent, index) => (
                  <div key={index} className="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                    <div className="flex items-center justify-between mb-3">
                      <h4 className="font-medium text-gray-900">{agent.name}</h4>
                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                        agent.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
                      }`}>
                        {agent.status === 'active' ? '✓ Active' : '⏳ Onboarding'}
                      </span>
                    </div>
                    <div className="space-y-2 text-sm text-gray-600">
                      <p><span className="font-medium">Agency:</span> {agent.agency}</p>
                      <p><span className="font-medium">Specialty:</span> {agent.specialty}</p>
                      <p><span className="font-medium">Assignments:</span> {agent.assignments}</p>
                      {agent.rating > 0 && (
                        <div className="flex items-center">
                          <span className="font-medium">Rating:</span>
                          <div className="flex items-center ml-2">
                            <StarIcon className="w-4 h-4 text-yellow-400 fill-current" />
                            <span className="ml-1">{agent.rating}</span>
                          </div>
                        </div>
                      )}
                    </div>
                    <div className="flex space-x-2 mt-4">
                      <button className="flex-1 text-xs bg-blue-100 text-blue-800 py-2 rounded hover:bg-blue-200">
                        View Profile
                      </button>
                      <button className="flex-1 text-xs bg-green-100 text-green-800 py-2 rounded hover:bg-green-200">
                        Assign Task
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* Deep Dive Tab - Advanced Analytics & Insights */}
        {activeTab === 'deepdive' && (
          <div className="space-y-6">

            {/* Advanced Analytics Dashboard */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Exchange Performance Deep Dive */}
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-gray-900">📊 Exchange Performance Analytics</h3>
                  <select className="text-sm border-gray-300 rounded-md">
                    <option>Last 30 Days</option>
                    <option>Last 90 Days</option>
                    <option>Last Year</option>
                  </select>
                </div>
                
                <div className="space-y-4">
                  <div className="flex justify-between items-center p-3 bg-blue-50 rounded-lg">
                    <div>
                      <p className="text-sm font-medium text-blue-900">Average Completion Time</p>
                      <p className="text-2xl font-bold text-blue-600">45.2 days</p>
                    </div>
                    <div className="text-right">
                      <p className="text-xs text-blue-600">↓ 12% improvement</p>
                      <p className="text-xs text-blue-500">vs last period</p>
                    </div>
                  </div>
                  
                  <div className="flex justify-between items-center p-3 bg-green-50 rounded-lg">
                    <div>
                      <p className="text-sm font-medium text-green-900">Success Rate</p>
                      <p className="text-2xl font-bold text-green-600">94.7%</p>
                    </div>
                    <div className="text-right">
                      <p className="text-xs text-green-600">↑ 3.2% increase</p>
                      <p className="text-xs text-green-500">vs last period</p>
                    </div>
                  </div>
                  
                  <div className="flex justify-between items-center p-3 bg-purple-50 rounded-lg">
                    <div>
                      <p className="text-sm font-medium text-purple-900">Total Value Processed</p>
                      <p className="text-2xl font-bold text-purple-600">$12.8M</p>
                    </div>
                    <div className="text-right">
                      <p className="text-xs text-purple-600">↑ 18% growth</p>
                      <p className="text-xs text-purple-500">vs last period</p>
                    </div>
                  </div>
                </div>
              </div>

              {/* User Activity Heatmap */}
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-4">🌡️ User Activity Heatmap</h3>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">Peak Hours (9AM-11AM)</span>
                    <div className="w-32 bg-gray-200 rounded-full h-2">
                      <div className="bg-red-500 h-2 rounded-full" style={{width: '85%'}}></div>
                    </div>
                    <span className="text-sm font-medium">85%</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">Business Hours (9AM-5PM)</span>
                    <div className="w-32 bg-gray-200 rounded-full h-2">
                      <div className="bg-orange-500 h-2 rounded-full" style={{width: '72%'}}></div>
                    </div>
                    <span className="text-sm font-medium">72%</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">Evening (5PM-8PM)</span>
                    <div className="w-32 bg-gray-200 rounded-full h-2">
                      <div className="bg-yellow-500 h-2 rounded-full" style={{width: '45%'}}></div>
                    </div>
                    <span className="text-sm font-medium">45%</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">Off Hours</span>
                    <div className="w-32 bg-gray-200 rounded-full h-2">
                      <div className="bg-green-500 h-2 rounded-full" style={{width: '12%'}}></div>
                    </div>
                    <span className="text-sm font-medium">12%</span>
                  </div>
                </div>
              </div>
            </div>

            {/* Detailed Exchange Breakdown */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-lg font-semibold text-gray-900">🔬 Exchange Type Analysis</h3>
                <div className="flex space-x-2">
                  <button className="px-3 py-1 bg-blue-100 text-blue-700 rounded-md text-sm">All Types</button>
                  <button className="px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-md text-sm">Like-Kind</button>
                  <button className="px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-md text-sm">Reverse</button>
                </div>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div className="text-center">
                  <div className="w-20 h-20 mx-auto mb-3 bg-blue-100 rounded-full flex items-center justify-center">
                    <span className="text-2xl font-bold text-blue-600">65%</span>
                  </div>
                  <h4 className="font-semibold text-gray-900">Like-Kind Exchanges</h4>
                  <p className="text-sm text-gray-600">Most common type</p>
                  <p className="text-xs text-blue-600 mt-1">Avg: $890K value</p>
                </div>
                
                <div className="text-center">
                  <div className="w-20 h-20 mx-auto mb-3 bg-green-100 rounded-full flex items-center justify-center">
                    <span className="text-2xl font-bold text-green-600">25%</span>
                  </div>
                  <h4 className="font-semibold text-gray-900">Reverse Exchanges</h4>
                  <p className="text-sm text-gray-600">Growing segment</p>
                  <p className="text-xs text-green-600 mt-1">Avg: $1.2M value</p>
                </div>
                
                <div className="text-center">
                  <div className="w-20 h-20 mx-auto mb-3 bg-purple-100 rounded-full flex items-center justify-center">
                    <span className="text-2xl font-bold text-purple-600">10%</span>
                  </div>
                  <h4 className="font-semibold text-gray-900">Build-to-Suit</h4>
                  <p className="text-sm text-gray-600">Specialized</p>
                  <p className="text-xs text-purple-600 mt-1">Avg: $2.1M value</p>
                </div>
              </div>
            </div>

            {/* Task Performance Deep Dive */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">⚡ Task Performance Deep Dive</h3>
              
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-medium text-gray-900 mb-3">Bottleneck Analysis</h4>
                  <div className="space-y-2">
                    <div className="flex justify-between items-center p-2 bg-red-50 rounded">
                      <span className="text-sm">Document Review</span>
                      <span className="text-xs bg-red-100 text-red-700 px-2 py-1 rounded">3.2 days avg</span>
                    </div>
                    <div className="flex justify-between items-center p-2 bg-orange-50 rounded">
                      <span className="text-sm">Title Processing</span>
                      <span className="text-xs bg-orange-100 text-orange-700 px-2 py-1 rounded">2.1 days avg</span>
                    </div>
                    <div className="flex justify-between items-center p-2 bg-yellow-50 rounded">
                      <span className="text-sm">Client Response</span>
                      <span className="text-xs bg-yellow-100 text-yellow-700 px-2 py-1 rounded">1.8 days avg</span>
                    </div>
                  </div>
                </div>
                
                <div>
                  <h4 className="font-medium text-gray-900 mb-3">Efficiency Metrics</h4>
                  <div className="space-y-3">
                    <div className="flex justify-between">
                      <span className="text-sm text-gray-600">Tasks Completed on Time</span>
                      <span className="font-semibold text-green-600">78%</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-sm text-gray-600">Average Task Duration</span>
                      <span className="font-semibold text-blue-600">2.4 days</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-sm text-gray-600">Overdue Tasks</span>
                      <span className="font-semibold text-red-600">{stats.tasks.overdue}</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Revenue & Financial Deep Dive */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">💰 Revenue & Financial Analytics</h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                <div className="bg-gradient-to-br from-green-50 to-green-100 p-4 rounded-lg">
                  <h4 className="text-sm font-medium text-green-800">Monthly Recurring Revenue</h4>
                  <p className="text-2xl font-bold text-green-600">$185K</p>
                  <p className="text-xs text-green-500">↑ 12% MoM</p>
                </div>
                
                <div className="bg-gradient-to-br from-blue-50 to-blue-100 p-4 rounded-lg">
                  <h4 className="text-sm font-medium text-blue-800">Average Fee per Exchange</h4>
                  <p className="text-2xl font-bold text-blue-600">$3,200</p>
                  <p className="text-xs text-blue-500">↑ 5% from last month</p>
                </div>
                
                <div className="bg-gradient-to-br from-purple-50 to-purple-100 p-4 rounded-lg">
                  <h4 className="text-sm font-medium text-purple-800">Client Lifetime Value</h4>
                  <p className="text-2xl font-bold text-purple-600">$8,900</p>
                  <p className="text-xs text-purple-500">Based on avg 2.8 exchanges</p>
                </div>
                
                <div className="bg-gradient-to-br from-orange-50 to-orange-100 p-4 rounded-lg">
                  <h4 className="text-sm font-medium text-orange-800">Outstanding AR</h4>
                  <p className="text-2xl font-bold text-orange-600">$45K</p>
                  <p className="text-xs text-orange-500">Avg 28 days collection</p>
                </div>
              </div>
            </div>
          </div>
        )}

        {activeTab === 'templates' && (
          <div className="space-y-6">
            <TemplateManager />
          </div>
        )}
        {activeTab === 'system' && (
          <div className="space-y-6">
            {/* System Settings */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <div className="flex items-center justify-between mb-6">
                <div>
                  <h3 className="text-xl font-bold text-blue-900 flex items-center">
                    <DocumentPlusIcon className="w-6 h-6 mr-2 text-blue-600" />
                    📄 Template Document Management
                  </h3>
                  <p className="text-sm text-blue-700 mt-1 font-medium">Upload and manage document templates for exchanges</p>
                </div>
                <button
                  onClick={() => setShowTemplateUpload(true)}
                  className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center shadow-lg font-medium"
                >
                  <CloudArrowUpIcon className="w-5 h-5 mr-2" />
                  📤 Upload Template
                </button>
              </div>

              {/* Template Documents List */}
              <div className="space-y-4">
                {templateDocuments.length === 0 ? (
                  <div className="text-center py-12 text-blue-600 bg-white rounded-lg border-2 border-dashed border-blue-300">
                    <DocumentPlusIcon className="w-16 h-16 mx-auto mb-4 text-blue-400" />
                    <p className="text-lg font-medium">No template documents uploaded yet</p>
                    <p className="text-sm mt-2">Click "📤 Upload Template" to add your first template</p>
                  </div>
                ) : (
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {templateDocuments.map((template) => (
                      <div key={template.id} className="bg-white border-2 border-blue-200 rounded-lg p-4 hover:shadow-lg transition-shadow">
                        <div className="flex items-start justify-between mb-3">
                          <div className="flex-1">
                            <h4 className="font-medium text-gray-900 truncate">{template.name}</h4>
                            <p className="text-sm text-gray-600 mt-1 line-clamp-2">{template.description}</p>
                          </div>
                          <div className="flex space-x-1 ml-2">
                            <button
                              onClick={() => window.open(template.url, '_blank')}
                              className="p-2 text-blue-600 hover:text-blue-800 bg-blue-50 rounded"
                              title="View document"
                            >
                              <EyeIcon className="w-4 h-4" />
                            </button>
                            <button
                              onClick={() => handleDeleteTemplate(template.id)}
                              className="p-2 text-red-600 hover:text-red-800 bg-red-50 rounded"
                              title="Delete template"
                            >
                              <TrashIcon className="w-4 h-4" />
                            </button>
                          </div>
                        </div>
                        <div className="flex items-center justify-between text-xs text-gray-500">
                          <span className="bg-gray-100 px-2 py-1 rounded">{template.file_type?.toUpperCase()}</span>
                          <span>{new Date(template.created_at).toLocaleDateString()}</span>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>

            {/* System Health Overview */}
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-green-100">
                    <ServerIcon className="w-6 h-6 text-green-600" />
                  </div>
                  <span className="text-xs font-medium text-green-600 bg-green-100 px-2 py-1 rounded-full">Healthy</span>
                </div>
                <p className="text-2xl font-bold text-gray-900">99.9%</p>
                <p className="text-sm text-gray-600 mt-1">System Uptime</p>
                <p className="text-xs text-gray-500 mt-2">Last 30 days</p>
              </div>

              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-blue-100">
                    <CpuChipIcon className="w-6 h-6 text-blue-600" />
                  </div>
                  <div className="flex items-center">
                    <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse mr-1"></div>
                    <span className="text-xs font-medium text-gray-600">Normal</span>
                  </div>
                </div>
                <p className="text-2xl font-bold text-gray-900">23%</p>
                <p className="text-sm text-gray-600 mt-1">CPU Usage</p>
                <p className="text-xs text-gray-500 mt-2">4 cores available</p>
              </div>

              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-purple-100">
                    <CircleStackIcon className="w-6 h-6 text-purple-600" />
                  </div>
                  <span className="text-xs font-medium text-gray-600">2.1 GB / 8 GB</span>
                </div>
                <p className="text-2xl font-bold text-gray-900">26%</p>
                <p className="text-sm text-gray-600 mt-1">Memory Usage</p>
                <p className="text-xs text-gray-500 mt-2">5.9 GB available</p>
              </div>

              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="p-3 rounded-lg bg-yellow-100">
                    <CloudIcon className="w-6 h-6 text-yellow-600" />
                  </div>
                  <span className="text-xs font-medium text-yellow-600 bg-yellow-100 px-2 py-1 rounded-full">45 GB</span>
                </div>
                <p className="text-2xl font-bold text-gray-900">112 GB</p>
                <p className="text-sm text-gray-600 mt-1">Storage Used</p>
                <p className="text-xs text-gray-500 mt-2">388 GB available</p>
              </div>
            </div>

            {/* System Configuration */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">System Configuration</h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {/* Environment Settings */}
                <div>
                  <h4 className="text-sm font-medium text-gray-700 mb-3">Environment Settings</h4>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div>
                        <p className="text-sm font-medium text-gray-900">Environment</p>
                        <p className="text-xs text-gray-500">Current deployment environment</p>
                      </div>
                      <span className="px-3 py-1 bg-green-100 text-green-800 text-sm font-medium rounded-full">Production</span>
                    </div>
                    
                    <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div>
                        <p className="text-sm font-medium text-gray-900">Debug Mode</p>
                        <p className="text-xs text-gray-500">Enable detailed error logging</p>
                      </div>
                      <label className="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" className="sr-only peer" />
                        <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-red-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-red-600"></div>
                      </label>
                    </div>

                    <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div>
                        <p className="text-sm font-medium text-gray-900">Maintenance Mode</p>
                        <p className="text-xs text-gray-500">Disable user access temporarily</p>
                      </div>
                      <label className="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" className="sr-only peer" />
                        <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-yellow-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-yellow-600"></div>
                      </label>
                    </div>
                  </div>
                </div>

                {/* API Configuration */}
                <div>
                  <h4 className="text-sm font-medium text-gray-700 mb-3">API Configuration</h4>
                  <div className="space-y-3">
                    <div className="p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center justify-between mb-2">
                        <p className="text-sm font-medium text-gray-900">API Rate Limit</p>
                        <span className="text-sm text-gray-600">1000 req/min</span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div className="bg-blue-600 h-2 rounded-full" style={{ width: '35%' }}></div>
                      </div>
                      <p className="text-xs text-gray-500 mt-1">350 / 1000 requests used</p>
                    </div>

                    <div className="p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center justify-between mb-2">
                        <p className="text-sm font-medium text-gray-900">API Version</p>
                        <select className="text-sm border-gray-300 rounded-md">
                          <option>v2.0 (Current)</option>
                          <option>v1.9</option>
                          <option>v1.8</option>
                        </select>
                      </div>
                    </div>

                    <div className="p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center justify-between">
                        <p className="text-sm font-medium text-gray-900">Webhook URL</p>
                        <button className="text-sm text-blue-600 hover:text-blue-800">Configure</button>
                      </div>
                      <p className="text-xs text-gray-500 mt-1">https://api.peak1031.com/webhooks</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Database Status */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold text-gray-900">Database Status</h3>
                <button 
                  onClick={() => setSyncing(true)}
                  disabled={syncing}
                  className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50"
                >
                  <ArrowPathIcon className={`w-4 h-4 mr-2 ${syncing ? 'animate-spin' : ''}`} />
                  {syncing ? 'Syncing...' : 'Sync Now'}
                </button>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div className="p-4 bg-gray-50 rounded-lg">
                  <div className="flex items-center justify-between mb-2">
                    <p className="text-sm font-medium text-gray-700">PostgreSQL</p>
                    <div className="flex items-center">
                      <div className="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                      <span className="text-xs text-green-600">Connected</span>
                    </div>
                  </div>
                  <p className="text-xs text-gray-500">Version: 14.5</p>
                  <p className="text-xs text-gray-500">Connections: 45/100</p>
                  <p className="text-xs text-gray-500">Response: 12ms</p>
                </div>

                <div className="p-4 bg-gray-50 rounded-lg">
                  <div className="flex items-center justify-between mb-2">
                    <p className="text-sm font-medium text-gray-700">Redis Cache</p>
                    <div className="flex items-center">
                      <div className="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                      <span className="text-xs text-green-600">Active</span>
                    </div>
                  </div>
                  <p className="text-xs text-gray-500">Version: 7.0.5</p>
                  <p className="text-xs text-gray-500">Memory: 256MB/512MB</p>
                  <p className="text-xs text-gray-500">Hit Rate: 94.2%</p>
                </div>

                <div className="p-4 bg-gray-50 rounded-lg">
                  <div className="flex items-center justify-between mb-2">
                    <p className="text-sm font-medium text-gray-700">S3 Storage</p>
                    <div className="flex items-center">
                      <div className="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                      <span className="text-xs text-green-600">Available</span>
                    </div>
                  </div>
                  <p className="text-xs text-gray-500">Bucket: peak1031-docs</p>
                  <p className="text-xs text-gray-500">Objects: 12,847</p>
                  <p className="text-xs text-gray-500">Size: 45.2GB</p>
                </div>
              </div>

              {/* Recent Database Operations */}
              <div className="mt-6">
                <h4 className="text-sm font-medium text-gray-700 mb-3">Recent Operations</h4>
                <div className="overflow-x-auto">
                  <table className="min-w-full divide-y divide-gray-200">
                    <thead className="bg-gray-50">
                      <tr>
                        <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Operation</th>
                        <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                        <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Duration</th>
                        <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Timestamp</th>
                      </tr>
                    </thead>
                    <tbody className="bg-white divide-y divide-gray-200">
                      {[
                        { operation: 'Database Backup', status: 'success', duration: '2m 34s', timestamp: '2024-01-15 03:00:00' },
                        { operation: 'Index Optimization', status: 'success', duration: '45s', timestamp: '2024-01-15 02:30:00' },
                        { operation: 'Cache Clear', status: 'success', duration: '3s', timestamp: '2024-01-15 02:00:00' },
                        { operation: 'Schema Migration', status: 'success', duration: '1m 12s', timestamp: '2024-01-14 22:00:00' },
                      ].map((op, index) => (
                        <tr key={index}>
                          <td className="px-4 py-2 text-sm text-gray-900">{op.operation}</td>
                          <td className="px-4 py-2">
                            <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                              op.status === 'success' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                            }`}>
                              {op.status === 'success' ? '✓' : '✗'} {op.status}
                            </span>
                          </td>
                          <td className="px-4 py-2 text-sm text-gray-600">{op.duration}</td>
                          <td className="px-4 py-2 text-sm text-gray-600">{op.timestamp}</td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>

            {/* System Logs */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold text-gray-900">System Logs</h3>
                <div className="flex items-center space-x-2">
                  <select className="text-sm border-gray-300 rounded-md">
                    <option>All Levels</option>
                    <option>Error</option>
                    <option>Warning</option>
                    <option>Info</option>
                    <option>Debug</option>
                  </select>
                  <button className="px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200">
                    Export Logs
                  </button>
                </div>
              </div>

              <div className="bg-gray-900 rounded-lg p-4 font-mono text-xs text-gray-300 h-64 overflow-y-auto">
                <div className="space-y-1">
                  <div className="flex items-start">
                    <span className="text-green-400">[INFO]</span>
                    <span className="ml-2 text-gray-400">2024-01-15 10:45:23</span>
                    <span className="ml-2">System health check completed successfully</span>
                  </div>
                  <div className="flex items-start">
                    <span className="text-green-400">[INFO]</span>
                    <span className="ml-2 text-gray-400">2024-01-15 10:44:18</span>
                    <span className="ml-2">User authentication successful for admin@peak1031.com</span>
                  </div>
                  <div className="flex items-start">
                    <span className="text-yellow-400">[WARN]</span>
                    <span className="ml-2 text-gray-400">2024-01-15 10:43:55</span>
                    <span className="ml-2">High memory usage detected: 78% of available memory</span>
                  </div>
                  <div className="flex items-start">
                    <span className="text-green-400">[INFO]</span>
                    <span className="ml-2 text-gray-400">2024-01-15 10:42:30</span>
                    <span className="ml-2">Database backup initiated</span>
                  </div>
                  <div className="flex items-start">
                    <span className="text-red-400">[ERROR]</span>
                    <span className="ml-2 text-gray-400">2024-01-15 10:41:12</span>
                    <span className="ml-2">Failed to send email notification: SMTP timeout</span>
                  </div>
                  <div className="flex items-start">
                    <span className="text-green-400">[INFO]</span>
                    <span className="ml-2 text-gray-400">2024-01-15 10:40:00</span>
                    <span className="ml-2">Scheduled task 'DailyReport' executed successfully</span>
                  </div>
                  <div className="flex items-start">
                    <span className="text-blue-400">[DEBUG]</span>
                    <span className="ml-2 text-gray-400">2024-01-15 10:39:45</span>
                    <span className="ml-2">Cache hit rate: 94.2% (last 5 minutes)</span>
                  </div>
                  <div className="flex items-start">
                    <span className="text-green-400">[INFO]</span>
                    <span className="ml-2 text-gray-400">2024-01-15 10:38:20</span>
                    <span className="ml-2">API rate limit reset for client IP: 192.168.1.100</span>
                  </div>
                </div>
              </div>
            </div>

            {/* Quick Actions */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Quick Actions</h3>
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                <button className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                  <ArrowPathIcon className="w-6 h-6 text-gray-600 mx-auto mb-2" />
                  <p className="text-sm font-medium text-gray-900">Restart Services</p>
                </button>
                <button className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                  <ArrowDownTrayIcon className="w-6 h-6 text-gray-600 mx-auto mb-2" />
                  <p className="text-sm font-medium text-gray-900">Backup Database</p>
                </button>
                <button className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                  <TrashIcon className="w-6 h-6 text-gray-600 mx-auto mb-2" />
                  <p className="text-sm font-medium text-gray-900">Clear Cache</p>
                </button>
                <button className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                  <DocumentArrowDownIcon className="w-6 h-6 text-gray-600 mx-auto mb-2" />
                  <p className="text-sm font-medium text-gray-900">Export Logs</p>
                </button>
              </div>
            </div>

            {/* Template Document Management */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              <div className="flex items-center justify-between mb-6">
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 flex items-center">
                    <DocumentPlusIcon className="w-5 h-5 mr-2" />
                    Template Document Management
                  </h3>
                  <p className="text-sm text-gray-600 mt-1">Upload and manage document templates for exchanges</p>
                </div>
                <button
                  onClick={() => setShowTemplateUpload(true)}
                  className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center"
                >
                  <CloudArrowUpIcon className="w-4 h-4 mr-2" />
                  Upload Template
                </button>
              </div>

              {/* Template Documents List */}
              <div className="space-y-4">
                {templateDocuments.length === 0 ? (
                  <div className="text-center py-8 text-gray-500">
                    <DocumentPlusIcon className="w-12 h-12 mx-auto mb-4 text-gray-300" />
                    <p>No template documents uploaded yet</p>
                    <p className="text-sm">Click "Upload Template" to add your first template</p>
                  </div>
                ) : (
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {templateDocuments.map((template) => (
                      <div key={template.id} className="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                        <div className="flex items-start justify-between mb-3">
                          <div className="flex-1">
                            <h4 className="font-medium text-gray-900 truncate">{template.name}</h4>
                            <p className="text-sm text-gray-600 mt-1 line-clamp-2">{template.description}</p>
                          </div>
                          <div className="flex space-x-1 ml-2">
                            <button
                              onClick={() => window.open(template.url, '_blank')}
                              className="p-1 text-blue-600 hover:text-blue-800"
                              title="View document"
                            >
                              <EyeIcon className="w-4 h-4" />
                            </button>
                            <button
                              onClick={() => handleDeleteTemplate(template.id)}
                              className="p-1 text-red-600 hover:text-red-800"
                              title="Delete template"
                            >
                              <TrashIcon className="w-4 h-4" />
                            </button>
                          </div>
                        </div>
                        <div className="flex items-center justify-between text-xs text-gray-500">
                          <span>{template.file_type?.toUpperCase()}</span>
                          <span>{new Date(template.created_at).toLocaleDateString()}</span>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </div>
        )}

        {/* Template Upload Modal */}
        {showTemplateUpload && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div className="bg-white rounded-lg p-6 w-full max-w-md mx-4">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold text-gray-900">Upload Template Document</h3>
                <button
                  onClick={() => setShowTemplateUpload(false)}
                  className="text-gray-400 hover:text-gray-600"
                >
                  <XMarkIcon className="w-5 h-5" />
                </button>
              </div>

              <form
                onSubmit={(e) => {
                  e.preventDefault();
                  const formData = new FormData();
                  const fileInput = (e.target as HTMLFormElement).querySelector('input[type="file"]') as HTMLInputElement;
                  const nameInput = (e.target as HTMLFormElement).querySelector('input[name="name"]') as HTMLInputElement;
                  const descriptionInput = (e.target as HTMLFormElement).querySelector('textarea[name="description"]') as HTMLTextAreaElement;

                  if (!fileInput.files?.[0]) {
                    alert('Please select a file');
                    return;
                  }

                  formData.append('file', fileInput.files[0]);
                  formData.append('name', nameInput.value);
                  formData.append('description', descriptionInput.value);
                  formData.append('category', 'template');

                  handleTemplateUpload(formData);
                }}
                className="space-y-4"
              >
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Template Name
                  </label>
                  <input
                    type="text"
                    name="name"
                    required
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="e.g., 1031 Exchange Agreement Template"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Description
                  </label>
                  <textarea
                    name="description"
                    rows={3}
                    required
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Brief description of this template and when to use it..."
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Document File
                  </label>
                  <input
                    type="file"
                    accept=".pdf,.doc,.docx,.xls,.xlsx"
                    required
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                  <p className="text-xs text-gray-500 mt-1">
                    Accepted formats: PDF, Word (.doc, .docx), Excel (.xls, .xlsx)
                  </p>
                </div>

                <div className="flex space-x-3 pt-4">
                  <button
                    type="button"
                    onClick={() => setShowTemplateUpload(false)}
                    className="flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50"
                  >
                    Cancel
                  </button>
                  <button
                    type="submit"
                    disabled={uploadingTemplate}
                    className="flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    {uploadingTemplate ? 'Uploading...' : 'Upload Template'}
                  </button>
                </div>
              </form>
            </div>
          </div>
        )}

        {/* Chat Tab */}
        {activeTab === 'chat' && (
          <div className="space-y-6">
            <div className="h-[calc(100vh-250px)]">
              <UnifiedChatInterface />
            </div>
          </div>
        )}

        {/* Documents Tab */}
        {activeTab === 'documents' && (
          <div className="space-y-6">
            <EnterpriseDocumentManager 
              isOpen={true}
              onClose={() => setDocumentManagerOpen(false)}
            />
          </div>
        )}
        </div>
      </div>
    </div>
  );
};

export default EnhancedAdminDashboard;